<?xml version="1.0"?>
<launch>

  <!--  ************** Global Parameters ***************  -->
  <!--param name="/use_sim_time" value="true"/-->

  <rosparam command="load" file="$(find mavs_gazebo)/config/global_params.yaml" />

  <!-- TODO fix gazebo and RViz views on hmmwv -->

  <!-- TODO use the robot name parametrically in all files-->
  <arg name="name" default="hmmwv"/>

  <!-- start gazebo and load the world -->
  <include file="$(find mavs_gazebo)/launch/world.launch" />

  <!-- spawn obstacles -->
  <param command="$(find xacro)/xacro --inorder $(find mavs_description)/urdf/obstacles.urdf.xacro " name="obstacles" />
  <node args="-urdf -param obstacles -model obstacles" name="spawn_obstacles" output="screen" pkg="gazebo_ros" respawn="false" type="spawn_model" />

  <!-- spawn robot into Gazebo -->
  <param name="robot_description" command="$(find xacro)/xacro --inorder $(find mavs_gazebo)/urdf/mavs.urdf.xacro" />
  <node name="spawn_urdf" pkg="gazebo_ros" type="spawn_model" args="-param robot_description -urdf -model hmmwv"/>

  <!-- Load joint controllers -->
  <include file="$(find mavs_control)/launch/mavs_control.launch"/>
*
  <!-- publish the global position of the robot -->
  <node name="postion" pkg="mavs_control" type="link_positions.jl" output="screen"/>
  <node pkg="mavs_description" type="frame_tf_broadcaster" name="velodyne_top_link_tf_broadcaster" />
  <!-- TODO try to remove this and use odom and gps-->
  <node pkg="mavs_description" type="position_broadcaster" name="postion_broadcaster" args="$(arg name)"/>

  <!--node pkg="mavs_description" type="odom" name="odom_broadcaster" /-->

  <!-- LiDAR data processing -->
  <!--include file="$(find mavs_description)/launch/lidar_data.launch"/-->
  <!-- TODO update obstacle detector min max based off of senario, currently this is hardcoded in-->
  <include file="$(find obstacle_detector)/launch/mavs.launch"/>

  <!-- teliop TODO make this optional with args-->
  <node name="teliop_keys" pkg="teleop_twist_keyboard" type="teleop_twist_keyboard.py" output="screen"/>
  <node name="teliop" pkg="mavs_control" type="teliop.jl" output="screen"/>

  <!-- Obstacle Avoidance-->
  <node name="obstacle_params" pkg="mavs_control" type="obstacle_parameters.jl" output="screen"/>
  <node name="rosjl_obstacles" pkg="mavs_control" type="obstacle_avoidance_chrono.jl" output="screen"/>
  <!--node name="move_hmmwv" pkg="mavs_control" type="move_hmmwv.jl" output="screen"/>-->
  <node name="Chronode" pkg="ros_chrono" type="hmmwv_model.cpp" output="screen"/>



</launch>
