FROM nvidia/opengl:1.0-glvnd-devel-ubuntu16.04
MAINTAINER Yuki Iida <yuki.iida@tier4.jp>

ARG DEBIAN_FRONTEND=noninteractive
RUN apt-get update && apt-get install --assume-yes apt-utils

# Develop
#ENV DEBIAN_FRONTEND noninteractive
RUN apt-get update && apt-get install -y \
	dialog \
	apt-utils \
        software-properties-common \
        wget curl git cmake cmake-curses-gui \
        libboost-all-dev \
        libflann-dev \
        libgsl0-dev \
        libgoogle-perftools-dev \
        libeigen3-dev \
	python-pip

# PIP install packages to avoid warnings such as "io features related to pcap will be disabled"
#RUN apt-get update && apt-get install -y dialog apt-utils
#RUN pip install --upgrade pip && pip install -U setuptools && pip install pypcap pypng

# Intall some basic GUI and sound libs
RUN apt-get install -y \
        xz-utils file locales dbus-x11 pulseaudio dmz-cursor-theme \
        fonts-dejavu fonts-liberation hicolor-icon-theme \
        libcanberra-gtk3-0 libcanberra-gtk-module libcanberra-gtk3-module \
        libasound2 libgtk2.0-0 libdbus-glib-1-2 libxt6 libexif12 \
        libgl1-mesa-glx libgl1-mesa-dri language-pack-en \
        && update-locale LANG=en_US.UTF-8 LC_MESSAGES=POSIX

# Intall some basic GUI tools
RUN apt-get install -y \
        cmake-qt-gui \
        gnome-terminal

# Intall ROS and remove Gazebo7 and related dependencies

RUN echo "deb http://packages.ros.org/ros/ubuntu $(lsb_release -sc) main" > /etc/apt/sources.list.d/ros-latest.list \
&& apt-key adv --keyserver hkp://ha.pool.sks-keyservers.net:80 --recv-key \ 421C365BD9FF1F717815A3895523BAEEB01FA116 \
&& echo "deb http://packages.osrfoundation.org/gazebo/ubuntu-stable `lsb_release -cs` main" > /etc/apt/sources.list.d/gazebo-stable.list \
&& wget http://packages.osrfoundation.org/gazebo.key -O - | apt-key add - \
&& apt-get update \
&& apt-get install -y ros-kinetic-desktop-full

RUN apt-get remove -y '*gazebo*'
#&& apt-get remove ros-kinetic-gazebo* \
#&& apt-get purge ros-kinetic-gazebo* \
#&& apt autoremove

RUN apt-get update \
&& apt-get install -y python-rosinstall python-rosinstall-generator python-wstool \
&& apt-get install -y gazebo8 \
&& apt-get install -y ros-kinetic-gazebo8-ros-pkgs \
&& apt-get install -y ros-kinetic-fake-localization \
&& apt-get install -y ros-kinetic-joy \
&& apt-get install -y ros-kinetic-robot-state-publisher \
&& apt-get install -y ros-kinetic-rviz \
&& apt-get clean

RUN apt-get update && apt-get install -y \
        ros-kinetic-nmea-msgs ros-kinetic-roslint\
        ros-kinetic-nmea-navsat-driver ros-kinetic-sound-play \
        ros-kinetic-jsk-visualization ros-kinetic-grid-map \
        ros-kinetic-gps-common ros-kinetic-controller-manager \
        ros-kinetic-ros-control ros-kinetic-ros-controllers \
        ros-kinetic-gazebo8-ros-control ros-kinetic-joystick-drivers \
        libnlopt-dev freeglut3-dev qtbase5-dev libqt5opengl5-dev libssh2-1-dev \
        libarmadillo-dev libpcap-dev gksu libgl1-mesa-dev libglew-dev python-wxgtk3.0

# Install some missing dependencies
RUN sudo apt-get update && sudo apt-get install -y openni2-doc openni2-utils openni-doc openni-utils
RUN sudo apt-get install -y libopenni0 libopenni-sensor-pointclouds0 libopenni2-0 libopenni-sensor-pointclouds-dev
RUN sudo apt-get install -y libopenni2-dev libopenni-dev libopencv-dev libmosquitto-dev ros-kinetic-cmake-modules python-vtk6

RUN pip install --upgrade pip && pip install -U setuptools && pip install pypcap pypng

# Add basic user
ENV USERNAME autoware
ENV PULSE_SERVER /run/pulse/native
RUN useradd -m $USERNAME && \
        echo "$USERNAME:$USERNAME" | chpasswd && \
        usermod --shell /bin/bash $USERNAME && \
        usermod -aG sudo $USERNAME && \
        echo "$USERNAME ALL=(ALL) NOPASSWD:ALL" >> /etc/sudoers.d/$USERNAME && \
        chmod 0440 /etc/sudoers.d/$USERNAME && \
        # Replace 1000 with your user/group id
        usermod  --uid 1000 $USERNAME && \
        groupmod --gid 1000 $USERNAME

# Setup .bashrc for ROS
RUN echo "source /opt/ros/kinetic/setup.bash" >> /home/$USERNAME/.bashrc && \
        #Fix for qt and X server errors
        echo "export QT_X11_NO_MITSHM=1" >> /home/$USERNAME/.bashrc && \
        # cd to home on login
        echo "cd" >> /home/$USERNAME/.bashrc

# Change user
USER autoware

RUN sudo update-alternatives --install /usr/bin/vtk vtk /usr/bin/vtk6 10
RUN sudo ln -s /usr/lib/python2.7/dist-packages/vtk/libvtkRenderingPythonTkWidgets.x86_64-linux-gnu.so /usr/lib/x86_64-linux-gnu/libvtkRenderingPythonTkWidgets.so
RUN sudo rm /usr/lib/x86_64-linux-gnu/libGL.so
RUN sudo ln -s /usr/local/lib/x86_64-linux-gnu/libGL.so.1.0.0 /usr/lib/x86_64-linux-gnu/libGL.so


RUN sudo rosdep init \
        && rosdep update \
        && echo "source /opt/ros/kinetic/setup.bash" >> ~/.bashrc

# Install Autoware
RUN git clone https://github.com/CPFL/Autoware.git /home/$USERNAME/Autoware
RUN /bin/bash -c 'source /opt/ros/kinetic/setup.bash; cd /home/$USERNAME/Autoware/ros/src; catkin_init_workspace; cd ../; ./catkin_make_release'
RUN echo "source /home/$USERNAME/Autoware/ros/devel/setup.bash" >> /home/$USERNAME/.bashrc

# Setting
ENV LANG="en_US.UTF-8"
RUN echo "export LANG=\"en_US.UTF-8\"" >> /home/$USERNAME/.bashrc

# Install dev tools
RUN sudo apt-get -y install vim tmux gedit unzip

# Change Terminal Color
RUN gconftool-2 --set "/apps/gnome-terminal/profiles/Default/use_theme_background" --type bool false
RUN gconftool-2 --set "/apps/gnome-terminal/profiles/Default/use_theme_colors" --type bool false
RUN gconftool-2 --set "/apps/gnome-terminal/profiles/Default/background_color" --type string "#000000"

# copy irrlicht engine to the docker and build it
#RUN sudo mkdir -p /home/autoware/irrlicht-1.8.4
#COPY irrlicht-1.8.4 /home/autoware/irrlicht-1.8.4/
RUN sudo wget http://downloads.sourceforge.net/irrlicht/irrlicht-1.8.4.zip && \
sudo unzip irrlicht-1.8.4.zip -d /home/autoware && \
cd /home/autoware/irrlicht-1.8.4/source/Irrlicht && \
    sudo make sharedlib && sudo make install

# copy chrono to the docker and build it
RUN cd /opt ; sudo mkdir -p chrono/chrono_source chrono/chrono_build ; cd chrono/chrono_source && \
    sudo git clone -b master https://github.com/projectchrono/chrono.git
COPY chrono_build /opt/chrono/chrono_build
RUN cd /opt/chrono/chrono_build ; sudo make

# install Julia
RUN sudo wget https://julialang-s3.julialang.org/bin/linux/x64/0.6/julia-0.6.2-linux-x86_64.tar.gz && \
sudo tar -xvf julia-0.6.2-linux-x86_64.tar.gz -C /opt && \
echo 'alias julia='/opt/julia-d386e40c17/bin/julia'' >> ~/.bashrc


# Default CMD
CMD ["/bin/bash"]
