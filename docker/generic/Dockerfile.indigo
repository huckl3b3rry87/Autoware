<<<<<<< HEAD
# https://github.com/CPFL/Autoware/blob/master/docker/generic/Dockerfile.kinetic
# FROM nvidia/cuda:8.0-devel-ubuntu16.04

# then to test switching to an nvidia image -> uncommented line 2 and comment line 12.

# Note this is the car_demo docker file extracted
################################################################################
# https://github.com/CPFL/Autoware/blob/master/docker/generic/Dockerfile.kinetic
################################################################################
# This is an auto generated Dockerfile for ros:ros-core
# generated from docker_images/create_ros_core_image.Dockerfile.em
FROM ubuntu:xenial
# install packages
RUN apt-get update && apt-get install -y --no-install-recommends \
    dirmngr \
    gnupg2 \
    && rm -rf /var/lib/apt/lists/*

# setup keys
RUN apt-key adv --keyserver hkp://keyserver.ubuntu.com:80 --recv-keys 421C365BD9FF1F717815A3895523BAEEB01FA116

# setup sources.list
RUN echo "deb http://packages.ros.org/ros/ubuntu xenial main" > /etc/apt/sources.list.d/ros-latest.list

# install bootstrap tools
RUN apt-get update && apt-get install --no-install-recommends -y \
    python-rosdep \
    python-rosinstall \
    python-vcstools \
    && rm -rf /var/lib/apt/lists/*

# setup environment
ENV LANG C.UTF-8
ENV LC_ALL C.UTF-8

# bootstrap rosdep
RUN rosdep init \
    && rosdep update

# install ros packages
ENV ROS_DISTRO kinetic
RUN apt-get update && apt-get install -y \
<<<<<<< HEAD:docker/Dockerfile
    ros-kinetic-ros-core=1.3.1-0* \
    && rm -rf /var/lib/apt/lists/*

# setup entrypoint
COPY ./ros_entrypoint.sh /

#ENTRYPOINT ["/ros_entrypoint.sh"]  # H.F. comment out
#CMD ["bash"]                       # H.F. comment out
################################################################################  END
#https://github.com/CPFL/Autoware/blob/master/docker/generic/Dockerfile.kinetic
################################################################################
#%%%%%%%%
##############################################################
# This is an auto generated Dockerfile for ros:ros-base
# generated from docker_images/create_ros_image.Dockerfile.em
# FROM ros:kinetic-ros-core-xenial  # H.F. comment out

# install ros packages
RUN apt-get update && apt-get install -y \
    ros-kinetic-ros-base=1.3.1-0* \
&& rm -rf /var/lib/apt/lists/*
############################################################  END
#%%%%%%%%
############################################################  START
#https://github.com/osrf/docker_images/blob/5399f380af0a7735405a4b6a07c6c40b867563bd/ros/kinetic/ubuntu/xenial/robot/Dockerfile
##############################################################
# This is an auto generated Dockerfile for ros:robot
# generated from docker_images/create_ros_image.Dockerfile.em
# FROM ros:kinetic-ros-base-xenial  # H.F. comment out

# install ros packages
RUN apt-get update && apt-get install -y \
    ros-kinetic-robot=1.3.1-0* \
&& rm -rf /var/lib/apt/lists/*
############################################################  END
#https://github.com/osrf/docker_images/blob/5399f380af0a7735405a4b6a07c6c40b867563bd/ros/kinetic/ubuntu/xenial/robot/Dockerfile
##############################################################
#%%%%%%%%
############################################################ START
#https://github.com/osrf/docker_images/blob/master/ros/kinetic/ubuntu/xenial/desktop/Dockerfile
##############################################################
# This is an auto generated Dockerfile for ros:desktop
# generated from docker_images/create_ros_image.Dockerfile.em
# FROM ros:kinetic-robot-xenial   # H.F. comment out

# install ros packages
RUN apt-get update && apt-get install -y \
    ros-kinetic-desktop=1.3.1-0* \
&& rm -rf /var/lib/apt/lists/*
############################################################  END
#https://github.com/osrf/docker_images/blob/master/ros/kinetic/ubuntu/xenial/desktop/Dockerfile
##############################################################
#%%%%%%%%
############################################################ START
#https://github.com/osrf/car_demo/blob/master/Dockerfile
##############################################################
# FROM osrf/ros:kinetic-desktop     # H.F. comment out

#LABEL com.nvidia.volumes.needed="nvidia_driver"  # H.F. comment out
#ENV PATH /usr/local/nvidia/bin:${PATH}  # H.F. comment out
#ENV LD_LIBRARY_PATH /usr/local/nvidia/lib:/usr/local/nvidia/lib64:${LD_LIBRARY_PATH}  # H.F. comment out

RUN apt-get update \
 && apt-get install -y \
    wget \
    lsb-release \
    sudo \
    mesa-utils \
 && apt-get clean


# Get gazebo binaries
RUN echo "deb http://packages.osrfoundation.org/gazebo/ubuntu `lsb_release -cs` main" > /etc/apt/sources.list.d/gazebo-stable.list \
 && wget http://packages.osrfoundation.org/gazebo.key -O - | apt-key add - \
 && apt-get update \
 && apt-get install -y \
    gazebo8 \
    ros-kinetic-gazebo8-ros-pkgs \
    ros-kinetic-fake-localization \
    ros-kinetic-joy \
 && apt-get clean


RUN mkdir -p /tmp/workspace/src
COPY car_demo/prius_description /tmp/workspace/src/prius_description
COPY car_demo/prius_msgs /tmp/workspace/src/prius_msgs
COPY car_demo/car_demo /tmp/workspace/src/car_demo
RUN /bin/bash -c 'cd /tmp/workspace \
 && source /opt/ros/kinetic/setup.bash \
 && catkin_make'


CMD ["/bin/bash", "-c", "source /opt/ros/kinetic/setup.bash && source /tmp/workspace/devel/setup.bash && roslaunch car_demo demo.launch"]
############################################################  END
#https://github.com/osrf/car_demo/blob/master/Dockerfile
##############################################################
=======
=======
FROM nvidia/cuda:8.0-devel-ubuntu14.04
MAINTAINER Yuki Iida <aiueo.0409@gmail.com>

RUN apt-get update && apt-get install -y \
>>>>>>> b94c18bdb82cf29214a06941597a07b004c39dbb
        software-properties-common \
        wget curl git cmake cmake-curses-gui

# Install ROS
RUN wget http://packages.ros.org/ros.key -O - | apt-key add -
RUN echo "deb http://packages.ros.org/ros/ubuntu trusty main" > /etc/apt/sources.list.d/ros-latest.list
RUN apt-get update && apt-get install -y \
        ros-indigo-desktop-full ros-indigo-nmea-msgs \
        ros-indigo-nmea-navsat-driver ros-indigo-sound-play \
        ros-indigo-jsk-visualization ros-indigo-grid-map ros-indigo-gps-common \
        ros-indigo-controller-manager ros-indigo-ros-control \
        ros-indigo-ros-controllers ros-indigo-gazebo-ros-control \
        ros-indigo-sicktoolbox ros-indigo-sicktoolbox-wrapper \
        ros-indigo-joystick-drivers ros-indigo-novatel-span-driver \
        libnlopt-dev freeglut3-dev qtbase5-dev libqt5opengl5-dev libssh2-1-dev \
        libarmadillo-dev libpcap-dev gksu libgl1-mesa-dev libglew-dev

RUN rosdep init \
        && rosdep update \
        && echo "source /opt/ros/indigo/setup.bash" >> ~/.bashrc

# Develop
RUN apt-get install -y \
        libboost-all-dev \
        libflann-dev \
        libgsl0-dev \
        libgoogle-perftools-dev \
        libeigen3-dev

# Install some basic GUI and sound libs
RUN apt-get install -y \
        xz-utils file locales dbus-x11 pulseaudio dmz-cursor-theme \
        fonts-dejavu fonts-liberation hicolor-icon-theme \
        libcanberra-gtk3-0 libcanberra-gtk-module libcanberra-gtk3-module \
        libasound2 libgtk2.0-0 libdbus-glib-1-2 libxt6 libexif12 \
        libgl1-mesa-glx libgl1-mesa-dri \
        && update-locale LANG=C.UTF-8 LC_MESSAGES=POSIX

# Install some basic GUI tools
RUN apt-get install -y \
        cmake-qt-gui \
        gnome-terminal

# Add basic user
ENV USERNAME autoware
ENV PULSE_SERVER /run/pulse/native
RUN useradd -m $USERNAME && \
        echo "$USERNAME:$USERNAME" | chpasswd && \
        usermod --shell /bin/bash $USERNAME && \
        usermod -aG sudo $USERNAME && \
        echo "$USERNAME ALL=(ALL) NOPASSWD:ALL" >> /etc/sudoers.d/$USERNAME && \
        chmod 0440 /etc/sudoers.d/$USERNAME && \
        # Replace 1000 with your user/group id
        usermod  --uid 1000 $USERNAME && \
        groupmod --gid 1000 $USERNAME

# Setup .bashrc for ROS
RUN echo "source /opt/ros/indigo/setup.bash" >> /home/$USERNAME/.bashrc && \
        #Fix for qt and X server errors
        echo "export QT_X11_NO_MITSHM=1" >> /home/$USERNAME/.bashrc && \
        # cd to home on login
        echo "cd" >> /home/$USERNAME/.bashrc

############
##PT GREY FlyCaptureSDK
############
#download driver
RUN wget http://ertl.jp/~amonrroy/flycapture2-2.6.3.4-amd64-pkg.tgz && \
    tar -xvzf flycapture2-2.6.3.4-amd64-pkg.tgz
##install dependencies
RUN apt-get install -y libraw1394-11 libgtk2.0-0 libgtkmm-2.4-dev libglademm-2.4-dev libgtkglextmm-x11-1.2-dev libusb-1.0-0

RUN cd flycapture2-2.6.3.4-amd64 && \
    dpkg -i libflycapture-2* && \
    dpkg -i libflycapturegui-2* && \
    dpkg -i libflycapture-c-2* && \
    dpkg -i libflycapturegui-c-2* && \
    dpkg -i libmultisync-2* && \
    dpkg -i flycap-2* && \
    dpkg -i flycapture-doc-2* && \
    dpkg -i updatorgui*

#setup camera usb permissions
ENV PGUDEVFILE /etc/udev/rules.d/40-pgr.rules
RUN groupadd -f pgrimaging && \
    usermod -a -G pgrimaging $USERNAME && \
    echo "SUBSYSTEM==\"usb\", ATTR{idVendor}==\"1e10\", MODE=\"0666\", GROUP=\"pgrimaging\" " >> PGUDEVFILE && \
/etc/init.d/udev restart

## End PT GREY

# Change user
USER autoware

# Install Autoware
RUN git clone https://github.com/CPFL/Autoware.git /home/$USERNAME/Autoware
RUN /bin/bash -c 'source /opt/ros/indigo/setup.bash; cd /home/$USERNAME/Autoware/ros/src; catkin_init_workspace; cd ../; ./catkin_make_release'
RUN echo "source /home/$USERNAME/Autoware/ros/devel/setup.bash" >> /home/$USERNAME/.bashrc

# Change Terminal Color
RUN gconftool-2 --set "/apps/gnome-terminal/profiles/Default/use_theme_background" --type bool false
RUN gconftool-2 --set "/apps/gnome-terminal/profiles/Default/use_theme_colors" --type bool false
RUN gconftool-2 --set "/apps/gnome-terminal/profiles/Default/background_color" --type string "#FFFFFF"

# Default CMD
CMD ["/bin/bash"]
<<<<<<< HEAD
>>>>>>> 2a24713ad98711bfc15eaff21b5fb4af92263259:docker/generic/Dockerfile.indigo
=======
>>>>>>> b94c18bdb82cf29214a06941597a07b004c39dbb
